import base64
import zlib
import re

# Path to the encoded file
file_path = 'encoded.txt'

# Perform repeated decoding and decompression up to 30 times
for i in range(1000):
    with open(file_path, 'rb') as file:
        encoded_data = file.read()

    # Extract the content inside the b'...'
    match = re.search(rb"b'(.*)'", encoded_data)
    if match:
        encoded_data = match.group(1)

    try:
        # Reverse the encoded data, base64 decode, then zlib decompress
        reversed_data = encoded_data[::-1]
        decoded_data = base64.b64decode(reversed_data)
        decompressed_data = zlib.decompress(decoded_data)
        
        # Save the decompressed data back to the file
        with open(file_path, 'wb') as file:
            file.write(decompressed_data)

        print(f"Iteration {i+1}: Successfully decoded and decompressed. File size: {len(decompressed_data)} bytes")

    except Exception as e:
        print(f"Decoding stopped at iteration {i+1} due to error: {e}")
        break

# Print final result after all iterations
with open(file_path, 'rb') as file:
    print(file.read().decode('utf-8', errors='replace'))
